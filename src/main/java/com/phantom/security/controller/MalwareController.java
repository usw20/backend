package com.phantom.security.controller;

import com.phantom.security.dto.request.MalwareScanRequest;
import com.phantom.security.dto.response.MalwareScanResponse;
import com.phantom.security.dto.response.MalwareScanResult;
import com.phantom.security.service.MalwareService;
import jakarta.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.security.core.Authentication;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/malware")
@CrossOrigin(origins = "*", maxAge = 3600)
public class MalwareController {

    @Autowired
    private MalwareService malwareService;

    /**
     * 악성코드 스캔 데이터 전송 및 즉시 결과 반환
     * POST /malware/scan (실제 URL: /api/malware/scan)
     */
    @PostMapping("/scan")
    public ResponseEntity<MalwareScanResult> submitScanData(
            @Valid @RequestBody MalwareScanRequest request,
            Authentication authentication) {

        String userId = authentication.getName();

        // 스캔 처리 및 즉시 결과 반환
        MalwareScanResult result = malwareService.processScanData(userId, request);

        return ResponseEntity.ok(result);
    }

    /**
     * 악성코드 탐지 이력 조회
     * GET /malware/history (실제 URL: /api/malware/history)
     */
    @GetMapping("/history")
    public ResponseEntity<List<MalwareScanResponse>> getMalwareHistory(Authentication authentication) {
        String userId = authentication.getName();
        List<MalwareScanResponse> history = malwareService.getMalwareHistory(userId);

        return ResponseEntity.ok(history);
    }

    /**
     * 악성코드 탐지 통계 조회
     * GET /malware/statistics (실제 URL: /api/malware/statistics)
     */
    @GetMapping("/statistics")
    public ResponseEntity<Map<String, Long>> getMalwareStatistics(Authentication authentication) {
        String userId = authentication.getName();
        Map<String, Long> statistics = malwareService.getMalwareStatistics(userId);

        return ResponseEntity.ok(statistics);
    }
}